import os
import spidev
import RPi.GPIO as GPIO

#import time
from datetime import datetime
from time import sleep
from threading import Thread

# os.environ['DISPLAY'] = ":0.0"
# os.environ['KIVY_WINDOW'] = 'egl_rpi'

from kivy.app import App
from kivy.core.window import Window
from kivy.lang import Builder
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.properties import ObjectProperty
from kivy.clock import Clock

from pidev.Cyprus_Commands import Cyprus_Commands_RPi as cyprus
from pidev.stepper import stepper
from pidev.MixPanel import MixPanel
from pidev.kivy.PassCodeScreen import PassCodeScreen
from pidev.kivy.PauseScreen import PauseScreen
from pidev.kivy import DPEAButton
from pidev.kivy import ImageButton

#initalize values for the stepper motor
from dpeaDPi.DPiStepper import DPiStepper

dpiStepper.setBoardNumber(0)

# Enable the stepper motors, when disabled the motors are turned off and spin freely.
#
dpiStepper.enableMotors(True)

if dpiStepper.initialize() != True:
        print("Communication with the DPiStepper board failed.")
        return

# original steeper motor values s1 = stepper(port=1, micro_steps=32, hold_current=20, run_current=20, accel_current=20, deaccel_current=20,
#              steps_per_unit=200, speed=2)
#probably 32 or 200
microstepping = 32

dpiStepper.setMicrostepping(microstepping)

#setting up speed and acceleration
dpiStepper.setAccelerationInStepsPerSecondPerSecond(1, accel_steps_per_second_per_second)

#setting the speed I think 200 is the number fo steps per rotation
dpiStepper.setSpeedInStepsPerSecond(0, speed_steps_per_second)

#use to check if stepper motor with stright disk is in line
currentPosition = dpiStepper.getCurrentPositionInSteps(0)[1]
print(f"Pos = {currentPosition}")

#might be useful later to stop motors
def stop_all():
    #
    # now wait for both motors to stop
    #
    while dpiStepper.getAllMotorsStopped() == False:
        sleep(0.02)

